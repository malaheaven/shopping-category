plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

    // for rest docs
    id "org.asciidoctor.jvm.convert" version "3.3.2"

    // for querydsl
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

}

group = 'com.musinsa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    asciidoctorExtensions

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    asciidocVersion = "2.0.6.RELEASE"
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // for validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // for java annotation
    compileOnly 'org.jetbrains:annotations:23.0.0'

    // for p6spy
    implementation 'com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.8.0'

    // for cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.ehcache:ehcache:3.10.0'
    implementation 'javax.cache:cache-api:1.1.1'

    // for jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // for h2
    runtimeOnly 'com.h2database:h2'
    testImplementation 'com.h2database:h2'

    // for mysql-connector
    runtimeOnly 'mysql:mysql-connector-java'

    // for querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0'

    // for lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // for rest docs
    asciidoctorExtensions "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    dependsOn test
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

bootJar {
    copy {
        from asciidoctor.outputDir
        into "src/main/resources/static/docs"
    }
}

//querydsl start
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl end
